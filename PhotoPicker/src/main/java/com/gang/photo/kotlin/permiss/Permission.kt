package com.gang.photo.kotlin.permissimport android.Manifestimport android.app.Activityimport android.content.Intentimport com.gang.library.common.Permissionimport com.gang.photo.kotlin.picker.other.IntentBuilderimport com.gang.photo.kotlin.picker.other.cropPhotoDirimport com.gang.photo.kotlin.picker.other.takePhotoDirimport com.gang.tools.kotlin.utils.LogUtilsimport com.github.dfqin.grantor.PermissionListener/** * @CreateDate:     2022/7/19 15:34 * @ClassName:      permission * @Description:    申请权限 * @Author:         haoruigang */const val RC_CHOOSE_PHOTO = 1const val RC_MANAGE_ALL_FILES = 2const val RC_DATA_FOR_DIR = 3// 如果 Activity继承PhotoPickerActivity 直接跳转fun Activity.toPickerTakePhoto(    maxChooseCoun: Int = 1,    isCallResult: Boolean = false,    action: ((permission: Array<out String>) -> Unit)? = null,) {    // context.getString(R.string.string_permission_camear),    Permission.requestPermission(mContext = this, permissions = arrayOf(        Manifest.permission.READ_EXTERNAL_STORAGE,        Manifest.permission.WRITE_EXTERNAL_STORAGE,        Manifest.permission.CAMERA    ), permissAction = object : PermissionListener {        override fun permissionGranted(permission: Array<out String>) {            LogUtils.e(this::class.java.name + "Granted", Thread.currentThread().name)            if (isCallResult) {                action?.invoke(permission)            } else {                val photoPickerIntent: Intent = IntentBuilder(this@toPickerTakePhoto)                    .cameraFileDir(takePhotoDir()) // 是否开启拍照                    .maxChooseCount(maxChooseCoun) // 图片选择张数的最大值                    .cropFileDir(cropPhotoDir()) // 是否开启裁剪                    .build()                startActivityForResult(photoPickerIntent, RC_CHOOSE_PHOTO)            }        }        override fun permissionDenied(permission: Array<out String>) {            LogUtils.e(this::class.java.name + "Denied", "TODO: INTERNET Denied")        }    })}